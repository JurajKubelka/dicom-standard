name: update-and-publish

on:
  push:
    branches:
      - master
    tags:
      - v*
  schedule:
    - cron: '0 0 1 * *'

jobs:
  make:
    name: Run make
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Makefile
        run: |
          make clean
          make updatestandard
          make
        working-directory: dicom_standard
      - name: Upload JSON files
        uses: actions/upload-artifact@v1
        with:
          name: new_standard
          path: dicom_standard/dist
  test-and-publish:
    needs: make
    name: Run tests and publish distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox
          pip install -r requirements.txt
      - name: Download updated standard
        uses: actions/download-artifact@v1
        with:
          name: new_standard
      - name: Diff JSON files
        run: echo ::set-output name=diff_lines::$(diff -qr standard new_standard | grep -v ".gitignore" | wc -l)
        id: diff_files
      - name: Update standard
        run: |
          mv new_standard/*.json standard
          rm -rf new_standard
        if: steps.diff_files.outputs.diff_lines > 0
      - name: Run tests
        run: pytest tests
      - name: Publish to master
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: success() && steps.diff_files.outputs.diff_lines > 0 && !startsWith(github.event.ref, 'refs/tags')
      - name: Update dev version
        run: |
          ver=$(grep version setup.cfg | grep -io '[^ ]*$')
          dev_ver=${ver%.*}.dev$(date +%Y%m%d%H%M%S)
          sed -i "s/$ver/$dev_ver/g" setup.cfg
          echo ::set-env name=dev_ver::$dev_ver
      - name: Generate distribution archives
        run: python -m tox -e build-dist
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: http://test.pypi.org/legacy/
        if: success()
      - name: Update version to tag
        run: |
          tag=${GITHUB_REF##*/}
          sed -i "s/$dev_ver/$tag/g" setup.cfg
        if: success() && startsWith(github.event.ref, 'refs/tags')
      - name: Generate distribution archives
        run: python -m tox -e build-dist
        if: success() && startsWith(github.event.ref, 'refs/tags')
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
        if: success() && startsWith(github.event.ref, 'refs/tags')
